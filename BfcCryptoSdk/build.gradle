apply plugin: 'com.android.library'

def gitHead = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitTag = 'git describe --tags'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))

android {

    compileSdkVersion bfcBuildConfig.compileSdkVersion
    buildToolsVersion bfcBuildConfig.buildToolsVersion

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion bfcBuildConfig.minSdkVersion
        targetSdkVersion bfcBuildConfig.targetSdkVersion
        versionCode VERSION_CODE
        versionName VERSION_NAME

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "GIT_HEAD", "\"${gitHead}\""
        buildConfigField "String", "GIT_TAG", "\"${gitTag}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
        buildConfigField "String", "LIBRARY_NAME", "\"${POM_ARTIFACT_ID}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
//Copy类型
    task makeJar(type: Copy) {
        //删除存在的
        delete 'build/outputs/jar/'
        delete 'build/outputs/aar/'
        //设置拷贝的文件
        from('build/intermediates/bundles/release/')
        //打进jar包后的文件目录
        into('build/outputs/jar/')
        //将classes.jar放入build/libs/目录下
        //include ,exclude参数来设置过滤
        //（我们只关心classes.jar这个文件）
        include('classes.jar')
        //重命名
        rename('classes.jar', POM_ARTIFACT_ID + "-" + VERSION_NAME + ".jar")
    }

    makeJar.dependsOn("build")

    tasks.whenTaskAdded { theTask ->
        if (theTask.name.equals("uploadArchives")) {
            theTask.dependsOn "makeJar"
        }
    }
}



apply from: "http://172.28.2.93/bfc/Bfc/raw/develop/common-config/maven-push-jar.gradle"

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    // test
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile bfcBuildConfig.deps["junit"]
}



